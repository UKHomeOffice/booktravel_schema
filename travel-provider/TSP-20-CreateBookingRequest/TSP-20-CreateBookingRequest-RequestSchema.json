{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "title": "TSP-20-CreateBookingRequest Request Schema",
  "version": "0.0.1",
  "description": "Schema for travel booking request sent by RMP to travel provider",
  "properties": {
    "requestId": {
      "type": "integer",
      "description": "Unique Id for this booking - generated by RMP."
    },
    "groupRequests": {
      "type": "array",
      "description": "List of requests Ids to group together and book on the same flight.",
      "minItems": 1,
      "items": {
        "type": "integer"
      },
      "uniqueItems": true
    },
    "awaitEscortNames": {
      "type": "boolean",
      "description": "If true, the TSP should wait for details of names of escorts who will also be travelling before booking tickets. This field is tactical to support the interim state after launching this API where RMP will not have details of the escorts who will be travelling. These will be provided directly to the TSP by the ESP - usually by email.",
      "default": false
    },
    "requester": {
      "$ref": "#/definitions/requester",
      "description": "Details of the person who created this request in case of any queries."
    },
    "journey": {
      "$ref": "#/definitions/journey",
      "description": "Details of the journey to be made."
    },
    "travellers": {
      "type": "array",
      "description": "A list of the people making the journey. If awaitEscortNames is true, this list does not include escort details. See description of awaitEscortNames for further info.",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/traveller"
      }
    }
  },
  "additionalProperties": false,
  "required": [
    "requestId",
    "groupRequests",
    "requester",
    "journey",
    "travellers"
  ],
  "definitions": {
    "requester": {
      "type": "object",
      "description": "Basic contact details.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the contact.",
          "minLength": 1
        },
        "email": {
          "type": "string",
          "description": "Email address of the contact.",
          "format": "email"
        },
        "telephone": {
          "type": "string",
          "description": "Phone number of the contact.",
          "minLength": 1
        },
        "groupName": {
          "type": "string",
          "description": "Name of the group this contact is associated with e.g. Home Office department",
          "minLength": 1
        }
      },
      "additionalProperties": false,
      "required": [
        "name",
        "email",
        "telephone"
      ]
    },
    "journey": {
      "type": "object",
      "description": "Details of a journey.",
      "properties": {
        "origin": {
          "description": "Where the journey starts.",
          "$ref": "#/definitions/journeyWaypoint"
        },
        "destination": {
          "description": "Where the journey ends.",
          "$ref": "#/definitions/journeyWaypoint"
        },
        "scheduleConstraints": {
          "description": "Any requirements or constraints for when the journey must take place.",
          "$ref": "#/definitions/scheduleConstraints"
        },
        "flightTicketConstraints": {
          "description": "Any constraints that must be met when planning a journey involving flights.",
          "$ref": "#/definitions/flightTicketConstraints"
        }
      },
      "additionalProperties": false,
      "required": [
        "origin",
        "destination",
        "scheduleConstraints"
      ]
    },
    "journeyWaypoint": {
      "type": "object",
      "description": "A journey waypoint e.g. start or end locations. Currently only airports are supported but the schema is designed for extension later",
      "oneOf": [
        {
          "properties": {
            "airport": {
              "description": "An airport waypoint",
              "$ref": "#/definitions/airport"
            }
          },
          "anyOf": [
            {
              "required": [
                "airport"
              ]
            }
          ],
          "additionalProperties": false
        }
      ]
    },
    "airport": {
      "type": "object",
      "description": "Details identifying an airport",
      "properties": {
        "description": {
          "description": "A description for the airport. IATA codes are preferred but sometimes the code won't be known or requirements are less specific e.g. 'Any airport in the south of the UK'.",
          "type": "string",
          "minLength": 1
        },
        "IATACode": {
          "description": "An IATA code for an airport or set of airports (e.g. LON).",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        }
      },
      "anyOf": [
        {
          "required": [
            "description"
          ]
        },
        {
          "required": [
            "IATACode"
          ]
        }
      ],
      "additionalProperties": false
    },
    "scheduleConstraints": {
      "description": "An object specifying date and time constraints for a journey.",
      "type": "object",
      "properties": {
        "departureDate": {
          "description": "Constraints for the departure date.",
          "type": "object",
          "$ref": "#/definitions/dateConstraint"
        },
        "departureTime": {
          "description": "Constraints for the departure time.",
          "type": "object",
          "$ref": "#/definitions/timeConstraint"
        },
        "arrivalDate": {
          "description": "Constraints for the arrival date.",
          "type": "object",
          "$ref": "#/definitions/dateConstraint"
        },
        "arrivalTime": {
          "description": "Constraints for the arrival time.",
          "type": "object",
          "$ref": "#/definitions/timeConstraint"
        }
      },
      "anyOf": [
        {
          "required": [
            "departureDate"
          ]
        },
        {
          "required": [
            "departureTime"
          ]
        },
        {
          "required": [
            "arrivalDate"
          ]
        },
        {
          "required": [
            "arrivalTime"
          ]
        }
      ],
      "additionalProperties": false
    },
    "dateConstraint": {
      "type": "object",
      "description": "A date constraint - specifies a before and/or after date to be adhered to.",
      "properties": {
        "after": {
          "description": "The activity cannot take place until after this date.",
          "type": "string",
          "format": "date"
        },
        "before": {
          "description": "The activity must take place until before this date.",
          "type": "string",
          "format": "date"
        }
      },
      "anyOf": [
        {
          "required": [
            "after"
          ]
        },
        {
          "required": [
            "before"
          ]
        }
      ],
      "additionalProperties": false
    },
    "timeConstraint": {
      "type": "object",
      "description": "A time constraint - specifies a before and/or after time to be adhered to.",
      "properties": {
        "after": {
          "description": "The activity cannot take place until after this time.",
          "type": "string",
          "format": "time"
        },
        "before": {
          "description": "The activity must take place before this time.",
          "type": "string",
          "format": "time"
        }
      },
      "anyOf": [
        {
          "required": [
            "after"
          ]
        },
        {
          "required": [
            "before"
          ]
        }
      ],
      "additionalProperties": false
    },
    "flightTicketConstraints": {
      "type": "object",
      "description": "Constraints to adhere to when booking flight tickets.",
      "properties": {
        "flightNumber": {
          "description": "The tickets must be booked on this flight number.",
          "type": "string",
          "minLength": 1
        },
        "routingRequirements": {
          "description": "Free text description of any routing requirements that must be satisfied e.g. 'Direct flights only'.",
          "type": "string",
          "minLength": 1
        },
        "refundableRequired": {
          "description": "If true, any tickets purchased must be fully refundable in the event of cancellation.",
          "type": "boolean",
          "default": false
        }
      },
      "anyOf": [
        {
          "required": [
            "flightNumber"
          ]
        },
        {
          "required": [
            "routingRequirements"
          ]
        },
        {
          "required": [
            "refundableRequired"
          ]
        }
      ],
      "additionalProperties": false
    },
    "traveller": {
      "type": "object",
      "description": "Info about a person who will be travelling.",
      "properties": {
        "travellerId": {
          "description": "A unique Id for this person for their involvement in this journey. If the journey requirements are revised and a new requests is submitted, the same person Id will be used on the new booking to facilitate identification and reuse of tickets that may have been booked for them against the previous request. If the person is involved in a subsequent unrelated journey, they will have a new traveller Id.",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "supersedesRequestIds": {
          "type": "array",
          "description": "List of any previous request Ids made for this person which are superseded by this new request. Tickets from the previous request should be re-used if suitable. If not suitable and alternate tickets are provided, RMP will subsequently send a request for the previous tickets. The travellerId will be common across all requests listed.",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "homeOfficeReference": {
          "description": "Traveller's Home Office Reference. Only present if they are a returnee. May be shared by multiple travellers on a booking so should not be used as a unique Id.",
          "type": "string",
          "minLength": 1
        },
        "personId": {
          "description": "Person Id for this traveller. Also known as CID Id. Only present if they are a returnee.",
          "type": "string",
          "minLength": 1
        },
        "forename": {
          "description": "Traveller(s) forenames.",
          "type": "string",
          "minLength": 1
        },
        "surname": {
          "description": "Traveller's surname(s).",
          "type": "string",
          "minLength": 1
        },
        "dateOfBirth": {
          "description": "Traveller's date of birth.",
          "type": "string",
          "format": "date"
        },
        "gender": {
          "description": "Traveller's gender.",
          "enum": [
            "M",
            "F"
          ]
        },
        "nationality": {
          "description": "Traveller's country of nationality - represented as an ISO-3166 country code.",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "travelDocument": {
          "description": "Details of this traveller's travel document.",
          "type": "object",
          "$ref": "#/definitions/travelDocument"
        },
        "specialAssistance": {
          "description": "Details of any special assistance required by this traveller.",
          "type": "string",
          "minLength": 1
        },
        "mealPreference": {
          "description": "Details of any meal preferences for this traveller.",
          "type": "string",
          "minLength": 1
        },
        "travellerType": {
          "description": "Traveller's type.",
          "enum": [
            "RETURNEE",
            "MEDICAL_ESCORT",
            "SECURITY_ESCORT",
            "SPOTTER",
            "COMPANION"
          ]
        },
        "requiresMedicalEscort": {
          "description": "True if this traveller needs one or more medical escorts.",
          "type": "boolean"
        },
        "requiresSecurityEscort": {
          "description": "True if this traveller needs one or more security escorts.",
          "type": "boolean"
        },
        "isEscortForTravellerId": {
          "description": "Only applicable where travellerType = MEDICAL_ESCORT or SECURITY_ESCORT. Indicates which traveller this escort is accompanying.",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "isCompanionForTravellerId": {
          "description": "Only applicable where travellerType = COMPANION. Indicates which traveller this traveller is the companion for.",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        }
      },
      "required": [
        "travellerId",
        "forename",
        "surname",
        "dateOfBirth",
        "gender",
        "nationality",
        "travellerType",
        "requiresMedicalEscort",
        "requiresSecurityEscort"
      ],
      "additionalProperties": false
    },
    "travelDocument": {
      "description": "Info about a travel document.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The document type.",
          "enum": [
            "PASSPORT",
            "ID_CARD",
            "EMERGENCY_TRAVEL_DOC",
            "EU_LETTER",
            "COMMON_PROVISIONAL_TRAVEL_DOC",
            "CHICAGO_CONVENTION_LETTER",
            "UNITED_NATIONS_LAISSEZ_PASSER"
          ]
        },
        "documentNumber": {
          "description": "The document number.",
          "type": "string",
          "minLength": 1
        },
        "expiryDate": {
          "description": "The document expiry date.",
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    }
  }
}