{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "title": "TSP-20-CreateBookingRequest Request Schema",
  "version": "0.0.1",
  "description": "Schema for travel booking request sent to travel provider",
  "properties": {
    "companyId": {
      "type": "string",
      "enum": [
        "Home Office",
        "BPMS",
        "SHELL VPOB"
      ]
    },
    "travelType": {
      "description": "Type of travel booking request",
      "type": "string",
      "enum": [
        "Flight",
        "Hotel",
        "Ferry",
        "Car"
      ],
      "default": "Flight"
    },
    "actionType": {
      "description": "Identifies if the booking is a New, Update OR Cancel",
      "type": "string",
      "enum": [
        "New",
        "Update",
        "Cancel"
      ],
      "default": "New"
    },
    "requestId": {
      "type": "integer",
      "description": "Entity Id for this booking - generated by the company"
    },
    "key": {
      "description": "Unique key to identify the booking request like a UUID",
      "type": "string"
    },
    "requester": {
      "description": "Details of the requester initiating the travel request",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "description": "Personal email address of the case worker",
          "type": "string"
        },
        "telephone": {
          "description": "Telephone number of the requester",
          "type": "string"
        },
        "requestDate": {
          "description": "Date when the request was raised",
          "type": "string"
        },
        "teamEmail": {
          "description": "Group email of the team to which the requester belongs",
          "type": "string"
        },
        "teamTelephone": {
          "description": "Group telephone of the requester",
          "type": "string"
        },
        "teamCode": {
          "description": "Group code of the team to which the requester belongs",
          "type": "string"
        }
      },
      "anyOf": [
        {
          "description": "Constraints requiring either personal or team contact details to be provided.",
          "required": [
            "name",
            "email",
            "telephone"
          ]
        },
        {
          "description": "Constraints requiring either personal or team contact details to be provided.",
          "required": [
            "name",
            "teamEmail",
            "teamTelephone"
          ]
        }
      ]
    },
    "bookingType": {
      "description": "This will help the TSP to interpret if there is just 1 'traveler' or more",
      "type": "string",
      "enum": [
        "Individual",
        "Group",
        "Family"
      ],
      "default": "Individual"
    },
    "travelers": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "travelerId": {
            "description": "Unique ID to identify the traveller for a booking. This will be different for each traveler",
            "type": "integer"
          },
          "reference": {
            "description": "For Home Office it is Traveller's Reference and only present if they are a returnee. This should not be used as a unique Id as for a Family/Group Booking this will be shared by multiple travelers",
            "type": "string",
            "minLength": 1
          },
          "travelerType": {
            "description": "Industry-approved codes signifying the type of traveler and if Unaccompanied or Accompanied",
            "type": "string",
            "enum": [
              "DEPU",
              "DEPA",
              "MEDA",
              "MEDIC",
              "ESCORT"
            ],
            "default": "DEPU"
          },
          "routeType": {
            "description": "Mostly it will be 'OneWay' for traveler and 'Return' for Escorts",
            "type": "string",
            "enum": [
              "OneWay",
              "Return"
            ],
            "default": "OneWay"
          },
          "travelerDetails": {
            "type": "object",
            "properties": {
              "title": {
                "description": "Title of the Traveler",
                "type": "string"
              },
              "firstName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "lastName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "dateOfBirth": {
                "description": "Date of birth of the traveler in ISO-8601 format of yyyy-MM-dd",
                "type": "string",
                "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
              },
              "gender": {
                "description": "Gender of the Traveler",
                "type": "string",
                "enum": [
                  "Male",
                  "Female"
                ]
              },
              "nationality": {
                "description": "Nationality of the traveler"
              },
              "structuredRemarks": {
                "description": "This field is generally for Escorts"
              },
              "unstructuredRemarks": {
                "description": "This is a free text"
              },
              "travelDocument": {
                "type": "object",
                "properties": {
                  "documentType": {
                    "description": "Type of travel document",
                    "type": "string",
                    "enum": [
                      "Passport",
                      "Id_Card",
                      "Emergency_Travel_Doc",
                      "EU_Letter",
                      "Common_Provisional_Travel_Doc",
                      "Chicago_Convention_Letter",
                      "United_Nations_Laissez_Passer",
                      "Biometric_Return",
                      "Others"
                    ]
                  },
                  "documentNumber": {
                    "description": "Reference number of the document",
                    "type": "string"
                  },
                  "countryOfIssue": {
                    "description": "Country through which the document has been issued",
                    "type": "string"
                  },
                  "issueDate": {
                    "description": "Date of issue of the document",
                    "type": "string",
                    "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                    "format": "date-time"
                  },
                  "expiryDate": {
                    "description": "Expiry date of the document",
                    "type": "string",
                    "pattern": "dyyyy-MM-dd",
                    "format": "date-time"
                  },
                  "placeOfIssue": {
                    "description": "Place where the document is issued",
                    "type": "string"
                  },
                  "visas": {
                    "description": "Visa Details",
                    "type": "object",
                    "properties": {
                      "countryOfIssue": {
                        "description": "Visa issuing Country"
                      },
                      "issueDate": {
                        "description": "Visa Issue date",
                        "type": "string",
                        "pattern": "dyyyy-MM-dd",
                        "format": "date-time"
                      },
                      "expiryDate": {
                        "description": "Visa Expiry Date",
                        "type": "string",
                        "pattern": "dyyyy-MM-dd",
                        "format": "date-time"
                      }
                    }
                  },
                  "frequentFlyerNumber": {
                    "description": "Mostly used for Escorts",
                    "type": "string"
                  },
                  "preferences": {
                    "type": "object",
                    "properties": {
                      "seatPreferences": {
                        "description": "Seating preference"
                      },
                      "specialAssistance": {
                        "description": "Any special assistance required"
                      },
                      "mealPreference": {
                        "description": "Type of meal required ",
                        "type": "string",
                        "enum": [
                          "Veg",
                          "Child",
                          "Baby",
                          "Muslim",
                          "Hindu",
                          "Diabetic",
                          "Other",
                          "They need a meal to cater for Nut allergy"
                        ],
                        "default": "Veg"
                      }
                    }
                  }
                },
                "required": [
                  "documentType"
                ]
              }
            },
            "required": [
              "firstName",
              "lastName",
              "gender"
            ]
          }
        },
        "required": [
          "travelerId",
          "travelerType",
          "routeType",
          "travelerDetails"
        ],
        "additionalProperties": false
      }
    },
    "flights": {
      "description": "Flight details",
      "type": "object",
      "properties": {
        "routeType": {
          "description": "Flight route type",
          "type": "string",
          "default": "OneWay"
        },
        "routingConsiderations": {
          "description": "Free Text ",
          "type": "string"
        },
        "refundableRequired": {
          "description": "Whether the booking should be refundable or not",
          "type": "boolean"
        },
        "additionalInformation": {
          "description": "Free Text",
          "type": "string"
        },
        "flightClass": {
          "description": "Type of travel Class",
          "type": "string",
          "enum": [
            "Economy",
            "Premium Economy",
            "Business",
            "First",
            "Others"
          ],
          "default": "Economy"
        },
        "flightDetails": {
          "type": "object",
          "properties": {
            "flightNumber": {
              "description": "Number of the flight if known",
              "type": "string"
            },
            "departureAirport": {
              "description": "Description of departure airport",
              "type": "string"
            },
            "departureAirportCode": {
              "description": "IATA code of the departure airport",
              "type": "string"
            },
            "earliestDepartureDate": {
              "description": "Earliest date by which the traveler should depart",
              "type": "string",
              "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
            },
            "latestDepartureDate": {
              "description": "Latest date by which the traveler should depart",
              "type": "string",
              "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
            },
            "preferredDepartureTime": {
              "description": "Preferred time of departure",
              "type": "string"
            },
            "arrivalAirport": {
              "description": "Description of the arrival airport",
              "type": "string"
            },
            "arrivalAirportCode": {
              "description": "IATA code of the arrival airport",
              "type": "string"
            },
            "arrivalDate": {
              "description": "Date by which the traveler should arrive at the destination",
              "type": "string",
              "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
            },
            "preferredArrivalTime": {
              "description": "Preferred time of arrival",
              "type": "string"
            },
            "travelTimeConstraintType": {
              "description": "Time preference on when the flight should be booked",
              "type": "string"
            }
          },
          "required": [
            "departureAirport",
            "earliestDepartureDate",
            "arrivalAirport"
          ]
        }
      },
      "required": [
        "refundableRequired",
        "flightDetails"
      ]
    },
    "vessel": {
      "type": "object",
      "properties": {
        "vesselName": {
          "description": "Name of the vessel",
          "type": "string"
        },
        "vesselFlag": {
          "type": "string"
        },
        "portName": {
          "description": "Port where the vessel starts",
          "type": "string"
        },
        "costCenter": {
          "description": "Cost Center to which the booking is chargeable",
          "type": "string"
        }
      }
    }
  },
  "required": [
    "companyId",
    "travelType",
    "actionType",
    "requestId",
    "key",
    "requester",
    "bookingType",
    "travelers",
    "flights"
  ],
  "additionalProperties": false
}