{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "title": "TSP-20-CreateBookingRequest Request Schema",
  "version": "1.0.0",
  "description": "Schema for travel booking request sent to travel provider",
  "properties": {
    "companyId": {
      "type": "string",
      "enum": [
        "Home Office",
        "BPMS",
        "SHELL VPOB"
      ],
      "default": "Home Office"
    },
    "travelType": {
      "description": "Type of travel booking request",
      "type": "string",
      "enum": [
        "Flight",
        "Hotel",
        "Ferry",
        "Car"
      ],
      "default": "Flight"
    },
    "actionType": {
      "description": "Identifies if the booking is a New, Update OR Cancel",
      "type": "string",
      "enum": [
        "New",
        "Update",
        "Cancel"
      ],
      "default": "New"
    },
    "requestId": {
      "type": "integer",
      "description": "Entity Id for this booking - generated by the HO to uniquely identify this booking in all the correspondence"
    },
    "bookingType": {
      "type": "string",
      "description": "Identifies the kind of booking selected by the caseworker e.g. Individual, Group, Family, EscortOnlyIndividual, EscortOnlyFamily"
    },
    "key": {
      "description": "Unique key to identify the travel request wihtin the HO systems e.g. HO sdid",
      "type": "string"
    },
    "reference": {
      "description": "Home Office Reference e.g. Person Id, Port Reference OR CEPR of the detainee",
      "type": "string"
    },
    "requestAuthoriser": {
      "description": "Details of the case worker initiating the travel request",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "description": "Personal email address of the caseworker if available",
          "type": "string"
        },
        "telephone": {
          "description": "Telephone number of the caseworker if available",
          "type": "string"
        },
        "requestDate": {
          "description": "Date when the request was raised",
          "type": "string"
        },
        "teamEmail": {
          "description": "Group email of the team to which the requester belongs",
          "type": "string"
        },
        "teamTelephone": {
          "description": "Group telephone of the requester",
          "type": "string"
        },
        "teamName": {
          "description": "This will have both Group name to contact if named contact is not available and the Group code of the team to which the requester belongs",
          "type": "string"
        }
      },
      "anyOf": [
        {
          "description": "Constraints requiring either personal or team contact details to be provided.",
          "required": [
            "name",
            "email",
            "telephone"
          ]
        },
        {
          "description": "Constraints requiring either personal or team contact details to be provided.",
          "required": [
            "name",
            "teamEmail",
            "teamTelephone"
          ]
        }
      ]
    },
    "travelers": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "travelerId": {
            "description": "Unique ID to identify the traveller for a booking. This will be different for each traveler",
            "type": "integer"
          },
          "reference": {
            "description": "For Home Office it is Traveller's Reference and only present if they are a returnee. This should not be used as a unique Id as for a Family/Group Booking this will be shared by multiple travelers",
            "type": "string",
            "minLength": 1
          },
          "travelerType": {
            "description": "Industry-approved codes signifying the type of traveler and if Unaccompanied or Accompanied",
            "type": "string",
            "enum": [
              "DEPU",
              "DEPA",
              "MEDA",
              "MEDIC",
              "ESCORT"
            ],
            "default": "DEPU"
          },
          "routeType": {
            "description": "Mostly it will be 'OneWay' for traveler and 'Return' for Escorts",
            "type": "string",
            "enum": [
              "OneWay",
              "Return"
            ],
            "default": "OneWay"
          },
          "travelerDetails": {
            "type": "object",
            "properties": {
              "title": {
                "description": "Title of the Traveler",
                "type": "string"
              },
              "firstName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "lastName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "dateOfBirth": {
                "description": "Date of birth of the traveler in ISO-8601 format of yyyy-MM-dd",
                "type": "string",
                "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
              },
              "gender": {
                "description": "Gender of the Traveler",
                "type": "string",
                "enum": [
                  "Male",
                  "Female",
                  "Unknown"
                ]
              },
              "nationality": {
                "type": "string",
                "description": "Nationality of the Traveler e.g. Angola, British Citizen",
                "minLength": 1
              },
              "structuredRemarks": {
                "description": "This field is generally for Escorts"
              },
              "unstructuredRemarks": {
                "description": "This is a free text"
              }
            },
            "additionalProperties": false,
            "required": [
              "firstName",
              "lastName",
              "dateOfBirth",
              "gender",
              "nationality"
            ]
          },
          "travelDocument": {
            "type": "object",
            "properties": {
              "documentType": {
                "description": "Type of travel document",
                "type": "string",
                "enum": [
                  "Passport",
                  "Id_Card",
                  "Emergency_Travel_Doc",
                  "EU_Letter",
                  "Common_Provisional_Travel_Doc",
                  "Chicago_Convention_Letter",
                  "United_Nations_Laissez_Passer",
                  "Biometric_Return",
                  "UK_Letter",
                  "Others"
                ]
              },
              "documentNumber": {
                "description": "Reference number of the document",
                "type": "string"
              },
              "countryOfIssue": {
                "description": "Country through which the document has been issued",
                "type": "string"
              },
              "issueDate": {
                "description": "Date of issue of the document in ISO-8601 format yyyy-MM-dd",
                "type": "string",
                "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
              },
              "expiryDate": {
                "description": "Expiry date of the document in ISO-8601 format yyyy-MM-dd",
                "type": "string",
                "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "format": "date"
              },
              "placeOfIssue": {
                "description": "Place where the document is issued",
                "type": "string"
              },
              "visas": {
                "description": "Visa Details",
                "type": "object",
                "properties": {
                  "countryOfIssue": {
                    "description": "Visa issuing Country"
                  },
                  "issueDate": {
                    "description": "Visa Issue date in ISO-8601 format yyyy-MM-dd",
                    "type": "string",
                    "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                    "format": "date"
                  },
                  "expiryDate": {
                    "description": "Visa Expiry Date in ISO-8601 format yyyy-MM-dd",
                    "type": "string",
                    "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                    "format": "date"
                  }
                }
              },
              "frequentFlyerNumber": {
                "description": "Mostly used for Escorts",
                "type": "string"
              }
            },
            "required": [
              "documentType"
            ]
          },
          "preferences": {
            "type": "object",
            "properties": {
              "seatPreferences": {
                "description": "Seating preference",
                "type": "string",
                "enum": [
                  "Window",
                  "Aisle"
                ]
              },
              "specialAssistance": {
                "description": "Any special assistance required",
                "type": "string"
              },
              "mealPreferences": {
                "description": "Type of meal. e.g. Vegetarian does not contain meat, fish, fowl, eggs, honey, dairy products or derivatives. Hindu meal is vegetarian, meat-free and may include curries and spicy flavors",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Baby",
                    "Child meal",
                    "Diabetic",
                    "Vegetarian",
                    "Gluten intolerant",
                    "Hindu",
                    "Muslim",
                    "Other",
                    "Nut allergy"
                  ],
                  "default": "Vegetarian"
                }
              }
            }
          },
          "isDetained": {
            "type": "boolean",
            "description": "Indicates if the person is detained"
          },
          "placeOfDetention": {
            "$ref": "#/definitions/placeOfDetention"
          },
          "complexCaseDetails": {
            "type": "object",
            "properties": {
              "complexCase": {
                "type": "boolean",
                "description": "This will indicate whether or not Complex case team is handling this booking"
              },
              "complexCaseComments": {
                "type": "string",
                "description": "Complex case information (free text)"
              }
            },
            "additionalProperties": false,
            "required": [
              "complexCase"
            ]
          },
          "risksPosed": {
            "type": "array",
            "description": "Risks are provided by the caseworker in BRM",
            "items": {
              "$ref": "#/definitions/risk"
            }
          },
          "previousFailedReturnDetails": {
            "description": "Details about any previous failed returns of the Traveler",
            "properties": {
              "anyPreviousFailedReturns": {
                "type": "boolean",
                "description": "Indicates if the person has been failed to return previously"
              },
              "previousFailedReturn": {
                "$ref": "#/definitions/previousFailedReturn"
              }
            },
            "additionalProperties": false,
            "required": [
              "anyPreviousFailedReturns"
            ]
          },
          "escortsMedicsSpottersRequired": {
            "description": "This will include the value for escorts, medics and/or spotters",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Escorts",
                "Medics",
                "Spotters"
              ]
            }
          },
          "spotterDetails": {
            "type": "object",
            "properties": {
              "detailsKnown": {
                "type": "boolean",
                "description": "This will indicate whether the details of the spotter is known"
              },
              "name": {
                "type": "string",
                "description": "Spotter name"
              },
              "location": {
                "type": "string",
                "description": "Where the spotter is based"
              }
            },
            "additionalProperties": false,
            "required": [
              "detailsKnown"
            ]
          },
          "outstandingBarriers": {
            "type": "object",
            "properties": {
              "anyOutstandingBarrier": {
                "type": "boolean",
                "description": "Any legal, documentation or process issues outstanding"
              },
              "information": {
                "type": "string",
                "description": "Details of the outstanding barrier if any"
              }
            },
            "additionalProperties": false,
            "required": [
              "anyOutstandingBarrier"
            ]
          }
        }
      },
      "required": [
        "travelerId",
        "reference",
        "travelerType",
        "routeType",
        "travelerDetails",
        "travelDocument",
        "isDetained"
      ]
    },
    "flights": {
      "description": "Flight details",
      "type": "object",
      "properties": {
        "routeType": {
          "description": "Flight route type",
          "type": "string",
          "default": "OneWay"
        },
        "routingConsiderations": {
          "description": "Free Text ",
          "type": "string"
        },
        "refundableTickets": {
          "type": "boolean",
          "description": "Whether or not flight tickets should be refundable"
        },
        "extraInformation": {
          "description": "Any other information pertinent to the quote request - Free Text",
          "type": "string"
        },
        "flightClass": {
          "description": "Type of travel Class",
          "type": "string",
          "enum": [
            "Economy",
            "Premium Economy",
            "Business",
            "First",
            "Others"
          ],
          "default": "Economy"
        },
        "flightDetails": {
          "type": "object",
          "properties": {
            "flightNumber": {
              "description": "Number of the flight if known",
              "type": "string"
            },
            "departureAirport": {
              "description": "Description of departure airport",
              "type": "string"
            },
            "departureAirportCode": {
              "description": "IATA code of the departure airport",
              "type": "string"
            },
            "preferredDepartureDate": {
              "description": "Earliest date by which the traveler should depart - in ISO-8601 format of yyyy-MM-dd",
              "type": "string",
              "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
            },
            "latestDepartureDate": {
              "description": "Latest date by which the traveler should depart - in ISO-8601 format of yyyy-MM-dd",
              "type": "string",
              "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
            },
            "dayRestrictions": {
              "$ref": "#/definitions/restriction",
              "description": "Details of any days that they cannot travel on (free text)"
            },
            "preferredDepartureTimeRestrictions": {
              "$ref": "#/definitions/restriction",
              "description": "Restrictions to arrival/departure times (free text)"
            },
            "arrivalTimeTimeRestrictions": {
              "$ref": "#/definitions/restriction",
              "description": "Restrictions to arrival/departure times (free text)"
            },
            "transitRestrictions": {
              "$ref": "#/definitions/restriction",
              "description": "Transit country restrictions"
            },
            "airlineRestrictions": {
              "$ref": "#/definitions/restriction",
              "description": "Restrictions on which airlines that can be used"
            },
            "specificFlights": {
              "$ref": "#/definitions/specificFlights",
              "description": "The details of specific flights"
            },
            "preferredDepartureTime": {
              "description": "Preferred time of departure",
              "type": "string"
            },
            "arrivalAirport": {
              "description": "Description of the arrival airport",
              "type": "string"
            },
            "arrivalAirportCode": {
              "description": "IATA code of the arrival airport",
              "type": "string"
            },
            "arrivalDate": {
              "description": "Date by which the traveler should arrive at the destination - in ISO-8601 format of yyyy-MM-dd",
              "type": "string",
              "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
            },
            "preferredArrivalTime": {
              "description": "Preferred time of arrival",
              "type": "string"
            },
            "travelTimeConstraintType": {
              "description": "Time preference on when the flight should be booked",
              "type": "string"
            }
          },
          "required": [
            "departureAirport",
            "arrivalAirport",
            "preferredDepartureDate"
          ]
        }
      },
      "required": [
        "flightClass",
        "refundableRequired",
        "flightDetails"
      ]
    },
    "specificFlights": {
      "type": "object",
      "properties": {
        "departureDate": {
          "type": "string",
          "description": "Departure date of the specific flights"
        },
        "specificFlightNumbers": {
          "type": "string",
          "description": "Specific flight and airlines details"
        }
      },
      "additionalProperties": false,
      "required": [
        "specificFlightNumbers",
        "departureDate"
      ]
    },
    "vessel": {
      "type": "object",
      "properties": {
        "vesselName": {
          "description": "Name of the vessel",
          "type": "string"
        },
        "vesselFlag": {
          "type": "string"
        },
        "portName": {
          "description": "Port where the vessel starts",
          "type": "string"
        },
        "costCenter": {
          "description": "Cost Center to which the booking is chargeable",
          "type": "string"
        }
      }
    }
  },
  "required": [
    "companyId",
    "travelType",
    "actionType",
    "requestId",
    "bookingType",
    "key",
    "reference",
    "travelers",
    "flights",
    "requestAuthoriser"
  ],
  "definitions": {
    "previousFailedReturn": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "description": "Date in the ISO-8601 format yyyy-MM-dd."
        },
        "reason": {
          "type": "string",
          "description": "Details about the failed return"
        }
      },
      "additionalProperties": false,
      "required": [
        "date",
        "reason"
      ]
    },
    "placeOfDetention": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Place where the person in detained"
        },
        "details": {
          "type": "string",
          "description": "Details about the detention"
        }
      },
      "additionalProperties": false,
      "required": [
        "location"
      ]
    },
    "restriction": {
      "type": "object",
      "properties": {
        "isRestricted": {
          "type": "boolean",
          "description": "Whether or not restriction applies to this quote request"
        },
        "information": {
          "type": "string",
          "description": "Restrictions information (free text)"
        }
      },
      "additionalProperties": false,
      "required": [
        "isRestricted"
      ]
    },
    "risk": {
      "description": "Risks associated with the returnee that caseworker decides to share with CWT ",
      "properties": {
        "riskCode": {
          "type": "string",
          "description": "This will be the Risk code e.g. ACDT, Arson etc "
        },
        "riskDescription": {
          "type": "string",
          "description": "Descriptions for the codes e.g. Existing Medical Condition, Escape Risk"
        },
        "riskStartDate": {
          "type": "string",
          "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "description": "Date in the ISO-8601 format of YYYY-MM-DD for when the risk starts"
        },
        "riskEndDate": {
          "type": "string",
          "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "description": "Date in the ISO-8601 format of YYYY-MM-DD for when the risk ends"
        },
        "additionalInformation": {
          "type": "string",
          "description": "Agent entered information e.g. Has a conviction for threatening the travel staff with a bladed article"
        }
      },
      "additionalProperties": false,
      "required": [
        "riskCode"
      ]
    },
    "specificFlights": {
      "type": "object",
      "properties": {
        "specificFlightNumbers": {
          "type": "string",
          "description": "Specific flight and airlines details"
        },
        "departureDate": {
          "type": "string",
          "description": "Departure date of the specific flights"
        }
      },
      "additionalProperties": false,
      "required": [
        "specificFlightNumbers",
        "departureDate"
      ]
    }
  }
}