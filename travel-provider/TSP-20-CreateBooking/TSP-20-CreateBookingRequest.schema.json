{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "TSP20CreateBookingRequest",
  "version": "1.0.0",
  "description": "Schema for travel booking request sent to travel provider. Reference http://travelagenthub.blogspot.com/search/label/Amadeus",
  "properties":
  {
    "clientAccountNumber":
    {
      "type": "string",
      "description": "TSP client account number for HO. This is as agreed by HO with TSP Client Executive",
      "minLength": 0,
      "maxLength": 20
    },
    "requestId":
    {
      "type": "integer",
      "description": "HO generated request code for this booking to be used in all the correspondence with HO, TSP and ESP (if Escorted Booking)",
      "minLength": 0,
      "maxLength": 20
    },
    "ceprReference":
    {
      "description": "CEPR/Person Id value of the HO system. For a group booking this will be the id of the main traveller",
      "type": "string"
    },
    "uan":
    {
      "description": "Unique Application Number will be allocated at the point of entry into the immigration system. E.g. 1212-0099-0039-4065",
      "type": "string",
      "minLength": 1
    },
    "homeOfficeReference":
    {
      "type": "string",
      "description": "This is the HO Reference which may or may not be available",
      "minLength": 1
    },
    "status":
    {
      "description": "Identifies the status of the booking request in HO. Not all status may be supplied by TSP",
      "type": "string",
      "enum":
      [
        "Incomplete",
        "WaitingForTicket",
        "Cancelled",
        "SupplierCancelled",
        "Rebooked",
        "CancelRebooked",
        "SupplierCancelRebooked",
        "TicketBooked",
        "Completed"
      ],
      "default": "WaitingForTicket"
    },
    "bookingType":
    {
      "type": "string",
      "description": "Identifies the kind of booking selected by the caseworker e.g. individual, group, family, escortOnlyIndividual, escortOnlyFamily",
      "enum":
      [
        "individual",
        "group",
        "family"
      ],
      "default": "individual"
    },
    "travelServices":
    {
      "description": "Type of services needed for this travel booking",
      "type": "array",
      "items":
      {
        "type": "string",
        "enum":
        [
          "flights",
          "cars",
          "trains",
          "hotels",
          "boats"
        ],
        "default": "flights"
      }
    },
    "travelers":
    {
      "description": "For a group booking this is all the passengers who are returning as part of the same itinerary",
      "type": "array",
      "items":
      {
        "$ref": "#/definitions/traveler"
      }
    },
    "flights":
    {
      "description": "Flight details",
      "type": "object",
      "properties":
      {
        "bookingClass":
        {
          "description": "These are usually Fare classes e.g. Economy, Premium Economy, Business First",
          "type":
          [
            "string",
            "null"
          ]
        },
        "isLowCost":
        {
          "description": "Flight low cost",
          "type":
          [
            "boolean",
            "null"
          ]
        },
        "isRefundable":
        {
          "type": "boolean",
          "description": "Whether or not flight tickets should be refundable"
        },
        "departureDescription":
        {
          "description": "Indicates the name of the departure airport if known",
          "type": "string",
          "minLength": 1,
          "maxLength": 150
        },
        "arrivalDescription":
        {
          "description": "Indicates the name of the arrival airport",
          "type": "string",
          "minLength": 1,
          "maxLength": 150
        },
        "earliestDepartureDate":
        {
          "description": "Earliest date by which the traveler should depart - in ISO-8601 format of yyyy-MM-dd",
          "type": "string",
          "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
        },
        "latestDepartureDate":
        {
          "description": "Latest date by which the traveler should depart - in ISO-8601 format of yyyy-MM-dd",
          "type": "string",
          "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
        },
        "departureCode":
        {
          "description": "IATA code of the departure airport",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "preferredDepartureTime":
        {
          "description": "Preferred time of departure including any restrictions that apply",
          "type": "string"
        },
        "arrivalCode":
        {
          "description": "IATA code of the arrival airport",
          "type": "string"
        },
        "earliestArrivalDate":
        {
          "description": "Date by which the traveler should arrive at the destination - in ISO-8601 format of yyyy-MM-dd",
          "type": "string",
          "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
        },
        "latestArrivalDate":
        {
          "description": "Latest date by which the traveler should depart - in ISO-8601 format of yyyy-MM-dd",
          "type": "string",
          "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
        },
        "preferredArrivalTime":
        {
          "description": "Preferred time of arrival including any restrictions that apply",
          "type": "string"
        },
        "number":
        {
          "description": "To be used only if a specific Flight is required",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "departureDate":
        {
          "description": "This is to be used when only when this specific date of travel is required. Format: yyyy-MM-dd",
          "type": "string",
          "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
        },
        "departureTime":
        {
          "description": "This is to be used when only when this specific time of travel is required. Format: HH:mm (24h)",
          "type": "string"
        },
        "transitRestriction":
        {
          "description": "Additional entry requirements for several countries. E.g. Proof of a negative COVID-19 test taken within 72 hours",
          "type": "string",
          "minLength": 0,
          "maxLength": 300
        },
        "airlineRestriction":
        {
          "description": "Restricted on any specific airlines due to any previous unruly behaviour or Restricted medication on certain flights",
          "type": "string",
          "minLength": 0,
          "maxLength": 300
        },
        "travelTimeConstraintType":
        {
          "description": "Time preference on when the flight should be booked",
          "type": "string"
        },
        "notes":
        {
          "description": "Any other information pertinent to the travel e.g. day, airline, travelling with a co-passenger etc.",
          "type": "string"
        }
      },
      "required":
      [
        "bookingClass",
        "isLowCost",
        "isRefundable",
        "departureDescription",
        "arrivalDescription",
        "earliestDepartureDate"
      ]
    },
    "priority":
    {
      "description": "Priority of the request to do the booking",
      "type":
      [
        "string",
        "null"
      ],
      "enum":
      [
        null,
        "normal",
        "urgent",
        "critical"
      ],
      "default": "normal"
    },
    "requester":
    {
      "description": "Details of the case worker initiating the travel request",
      "type": "object",
      "properties":
      {
        "fullName":
        {
          "type": "string"
        },
        "email":
        {
          "description": "Email address of the caseworker if available",
          "type": "string"
        },
        "telephone":
        {
          "description": "Telephone number of the caseworker if available",
          "type": "string"
        },
        "requestDate":
        {
          "description": "Date when the request was raised",
          "type": "string"
        },
        "teamEmail":
        {
          "description": "Group email of the team to which the requester belongs",
          "type": "string"
        },
        "teamTelephone":
        {
          "description": "Group telephone of the requester",
          "type": "string"
        },
        "teamName":
        {
          "description": "This will have both Group name to contact if named contact is not available and the Group code of the team to which the requester belongs",
          "type": "string"
        }
      },
      "anyOf":
      [
        {
          "description": "Constraints requiring either personal or team contact details to be provided.",
          "required":
          [
            "fullName",
            "email",
            "telephone"
          ]
        },
        {
          "description": "Constraints requiring either personal or team contact details to be provided.",
          "required":
          [
            "fullName",
            "teamEmail",
            "teamTelephone"
          ]
        }
      ]
    }
  },
  "required":
  [
    "clientAccountNumber",
    "requestId",
    "ceprReference",
    "status",
    "bookingType",
    "travelServices",
    "travelers",
    "flights",
    "priority",
    "requester"
  ],
  "definitions":
  {
    "contact":
    {
      "type": "object",
      "properties":
      {
        "contactType":
        {
          "description": "Type of contact",
          "type": "string",
          "enum":
          [
            "email",
            "phone",
            "fax",
            "mobile"
          ]
        },
        "description":
        {
          "description": "Description of the contact",
          "type": "string"
        },
        "text":
        {
          "description": "Details or value of the contact type selected",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      },
      "required":
      [
        "contactType",
        "description",
        "text"
      ]
    },
    "traveler":
    {
      "type": "object",
      "properties":
      {
        "travelerId":
        {
          "description": "Unique ID to identify the traveller for a booking. Mostly used in group bookings, this will be different for each traveler",
          "type": "integer"
        },
        "travelerType":
        {
          "description": "Industry-approved codes signifying the type of traveler and if Unaccompanied or Accompanied",
          "type": "string",
          "enum":
          [
            "DEPU",
            "DEPA",
            "MEDA",
            "MEDIC",
            "ESCORT"
          ],
          "default": "DEPU"
        },
        "ceprReference":
        {
          "description": "This is only present for a returnee and not for Escorts. This should not be used as a unique Id as for a Family/Group Booking this will be shared by multiple travelers",
          "type": "string",
          "minLength": 1
        },
        "title":
        {
          "description": "Person title",
          "type":
          [
            "string",
            "null"
          ],
          "enum":
          [
            null,
            "mr",
            "mrs",
            "ms"
          ]
        },
        "firstName":
        {
          "type": "string",
          "minLength": 0,
          "maxLength": 150
        },
        "lastName":
        {
          "type": "string",
          "minLength": 0,
          "maxLength": 150
        },
        "fullName":
        {
          "type":
          [
            "string",
            "null"
          ],
          "minLength": 0,
          "maxLength": 300
        },
        "dateOfBirth":
        {
          "description": "Date of birth of the traveler in ISO-8601 format of yyyy-MM-dd",
          "type": "string",
          "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
        },
        "gender":
        {
          "description": "Gender of the traveler if supplied",
          "type": "string",
          "enum":
          [
            "male",
            "female",
            "other"
          ]
        },
        "nationality":
        {
          "type": "string",
          "description": "Nationality of the traveler e.g. Angola, British Citizen",
          "minLength": 0,
          "maxLength": 30
        },
        "personalDocument":
        {
          "type": "object",
          "$ref": "#/definitions/personalDocument"
        },
        "seatPreference":
        {
          "description": "Seating preference e.g. Bulkhead, Window, Aisle, Handicapped, Smoking Aisle Seat etc",
          "type":
          [
            "string",
            "null"
          ],
          "minLength": 0,
          "maxLength": 100
        },
        "mealPreference":
        {
          "description": "IATA Code of the type of meal preferred e.g. Asian Vegetarian meal(AVML) for Hindus is meat-free that include curries and spicy flavors",
          "minLength": 0,
          "maxLength": 100,
          "enum":
          [
            "AVML",
            "BBML",
            "CHML",
            "DBML",
            "VGML",
            "GFML",
            "VJML",
            "ALML",
            "MOML",
            "Others",
            "null"
          ],
          "default": "VGML"
        },
        "isEscortRequired":
        {
          "type": "boolean"
        },
        "isMedicsRequired":
        {
          "type": "boolean"
        },
        "isSpotterRequired":
        {
          "type": "boolean"
        },
        "specialAssistance":
        {
          "description": "Special assistance preference",
          "type":
          [
            "string",
            "null"
          ],
          "minLength": 0,
          "maxLength": 100
        },
        "isDetained":
        {
          "type": "boolean",
          "description": "Indicates to TSP/ESP if the person is detained"
        },
        "isComplexCase":
        {
          "type": "boolean",
          "description": "Indicates to TSP/ESP if this is a complex or standard case"
        },
        "complexCaseComments":
        {
          "type": "string",
          "description": "Complex case information if any",
          "minLength": 0,
          "maxLength": 600
        },
        "placeOfDetention":
        {
          "$ref": "#/definitions/placeOfDetention"
        },
        "contacts":
        {
          "description": "Passenger contact details if available",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/contact"
          }
        },
        "risksPosed":
        {
          "type": "array",
          "description": "Risks as applicable that may help to decide where to book the seats in the plane e.g. Suicidal, Violent etc.",
          "items":
          {
            "type": "string"
          }
        },
        "spotterDetails":
        {
          "type": "object",
          "description": "This will be supplied if the spotter details are known at the time of booking. ESP will know it more accurately",
          "properties":
          {
            "name":
            {
              "type": "string",
              "description": "Spotter name"
            },
            "location":
            {
              "type": "string",
              "description": "The place where spotter is based"
            }
          },
          "required":
          [
            "name"
          ]
        },
        "previousFailedReturnDetails":
        {
          "description": "Details about any previous failed returns of the traveler",
          "properties":
          {
            "anyPreviousFailedReturns":
            {
              "type": "boolean",
              "description": "Indicates if the person has been failed to return previously"
            },
            "previousFailedReturn":
            {
              "$ref": "#/definitions/previousFailedReturn"
            }
          },
          "additionalProperties": false,
          "required":
          [
            "anyPreviousFailedReturns"
          ]
        },
        "outstandingBarriers":
        {
          "type": "object",
          "properties":
          {
            "anyOutstandingBarrier":
            {
              "type": "boolean",
              "description": "Any legal, documentation or process issues outstanding"
            },
            "information":
            {
              "type": "string",
              "description": "Details of the outstanding barrier if any"
            }
          },
          "additionalProperties": false,
          "required":
          [
            "anyOutstandingBarrier"
          ]
        },
        "frequentTravelerProgram":
        {
          "description": "Mostly used for Escorts frequent flier number",
          "type": "string"
        },
        "additionalInformation":
        {
          "description": "The information is generally mostly for TSP and ESP about any restrictions",
          "type": "string"
        },
        "notes":
        {
          "description": "Any notes added for this booking",
          "type": "string"
        }
      },
      "required":
      [
        "travelerId",
        "travelerType",
        "title",
        "firstName",
        "lastName",
        "fullName",
        "gender",
        "dateOfBirth",
        "nationality",
        "personalDocument",
        "seatPreference",
        "mealPreference",
        "isEscortRequired",
        "isMedicsRequired",
        "isSpotterRequired",
        "specialAssistance",
        "isDetained",
        "isComplexCase"
      ]
    },
    "personalDocument":
    {
      "type": "object",
      "properties":
      {
        "type":
        {
          "description": "Type of travel document to be used for booking the travel",
          "type": "string",
          "enum":
          [
            "passport",
            "idCard",
            "visa",
            "emergencyTravelDoc",
            "euLetter",
            "commonProvisionalTravelDoc",
            "chicagoConventionLetter",
            "unitedNationsLaissezPasser",
            "biometricReturn",
            "others"
          ],
          "default": "passport"
        },
        "number":
        {
          "description": "Code/number document",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "issueBy":
        {
          "description": "Release authority",
          "type": "string",
          "minLength": 0,
          "maxLength": 150
        },
        "issueCountry":
        {
          "description": "Place where the document is issued. Usually the ISO country code",
          "type": "string"
        },
        "issueDate":
        {
          "description": "Date of issue of the document in ISO-8601 format yyyy-MM-dd",
          "type": "string",
          "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
        },
        "expiryDate":
        {
          "description": "Expiry date of the document in ISO-8601 format yyyy-MM-dd",
          "type": "string",
          "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "format": "date"
        },
        "visas":
        {
          "description": "Visa Details if any",
          "type": "object",
          "properties":
          {
            "type":
            {
              "description": "Type of visa",
              "type": "string"
            },
            "issueCountry":
            {
              "description": "Visa issuing Country"
            },
            "issueDate":
            {
              "description": "Visa Issue date in ISO-8601 format yyyy-MM-dd",
              "type": "string",
              "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "format": "date"
            },
            "expiryDate":
            {
              "description": "Visa Expiry Date in ISO-8601 format yyyy-MM-dd",
              "type": "string",
              "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "format": "date"
            }
          }
        }
      },
      "required":
      [
        "type"
      ]
    },
    "previousFailedReturn":
    {
      "type": "object",
      "properties":
      {
        "date":
        {
          "type": "string",
          "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "description": "Date in the ISO-8601 format yyyy-MM-dd."
        },
        "reason":
        {
          "type": "string",
          "description": "Details about the failed return"
        }
      },
      "additionalProperties": false,
      "required":
      [
        "date",
        "reason"
      ]
    },
    "placeOfDetention":
    {
      "type": "object",
      "properties":
      {
        "location":
        {
          "type": "string",
          "description": "Place where the person is detained"
        },
        "details":
        {
          "type": "string",
          "description": "Details about the detention"
        }
      },
      "additionalProperties": false,
      "required":
      [
        "location"
      ]
    }
  }
}