{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "TSP-40-SubmitTicketDetails Request Schema",
  "version": "0.0.1",
  "description": "Schema for TSP to supply RMP with details about the ticket(s) it has booked following a booking request from RMP. The TSP may send this message multiple times for a single booking request but a specific traveller must only be included in one message i.e. The TSP should wait until they have the full set of fulfilment details for a traveller before including them in a message.",
  "type": "object",
  "properties": {
    "requestId": {
      "type": "integer",
      "description": "Unique Id of the booking being responded to. Taken from the original booking request."
    },
    "actionedBy": {
      "$ref": "#/definitions/contact",
      "description": "Details of the logger from TSP who is fulfilling the request"
    },
    "bookedTicketDetails": {
      "description": "The TSP can submit details over a number of messages (see isComplete flag). It may also include travellers not listed in the original request - see handlingGuidelines.awaitEscortNames in TSP-20 request schema for more information.",
      "minItems": 1,
      "type": "object",
      "items": {
        "$ref": "#/definitions/bookedTicketDefinition"
      }
    },
    "isComplete": {
      "type": "boolean",
      "description": "A flag indicating whether this is the final message with booking details for this request. Once this flag has been sent, RMP will accept no further requests on this interface for this requestId."
    }
  },
  "additionalProperties": false,
  "required": [
    "requestId",
    "bookedTicketDetails",
    "isComplete"
  ],
  "definitions": {
    "contact": {
      "type": "object",
      "description": "Basic contact details of the TSP Logger actioning this request",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the logger.",
          "minLength": 1
        },
        "email": {
          "type": "string",
          "description": "Email address of the logger.",
          "format": "email"
        },
        "telephone": {
          "type": "string",
          "description": "Phone number of the logger.",
          "minLength": 1
        },
        "groupName": {
          "type": "string",
          "description": "TSP Group name to contact if named contact not available.",
          "minLength": 1
        },
        "groupCode": {
          "type": "string",
          "description": "Code of the TSP contact group.",
          "minLength": 1
        },
        "groupEmail": {
          "type": "string",
          "description": "Email address of the TSP contact group.",
          "format": "email"
        },
        "groupTelephone": {
          "type": "string",
          "description": "Phone number of the TSP contact group.",
          "minLength": 1
        }
      },
      "additionalProperties": false,
      "oneOf": [
        {
          "description": "Constraints requiring either telephone or group telephone to be provided.",
          "required": [
            "name",
            "email",
            "telephone",
            "groupName",
            "groupCode"
          ]
        },
        {
          "description": "Constraints requiring either telephone or group telephone to be provided.",
          "required": [
            "name",
            "email",
            "groupName",
            "groupCode",
            "groupTelephone"
          ]
        }
      ]
    },
    "bookedTicketDefinition": {
      "items": {
        "type": "object",
        "properties": {
          "travellerId": {
            "description": "A unique Id for this person for their involvement in this return. If addedBy is RMP, this value will have been provided by RMP in the booking request. If it's TSP, the travel provider will have generated this value. A v4 UUID is used as the unique Id.",
            "type": "string",
            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          },
          "firstName": {
            "description": "Traveller's forenames.",
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "description": "Traveller's surname(s).",
            "type": "string",
            "minLength": 1
          },
          "dateOfBirth": {
            "description": "Traveller's date of birth in ISO-8601 Format",
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "M",
              "F"
            ]
          },
          "nationality": {
            "description": "Traveller's country of nationality - represented as an ISO-3166 country code.",
            "type": "string",
            "pattern": "^[A-Z]{3}$"
          },
          "addedBy": {
            "description": "Indicates which system added this person to the booking. Exists to support transitional phase where the TSP will be receiving data about escorts directly from the ESP and adding them to this message to communicate details of these escorts back to RMP.",
            "type": "string",
            "enum": [
              "CWT",
              "RMP"
            ],
            "default": "CWT"
          },
          "flightDetails": {
            "$ref": "#/definitions/flightDetailsDefinition"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "flightDetails"
        ],
        "additionalProperties": false
      }
    },
    "flightDetailsDefinition": {
      "type": "object",
      "properties": {
        "locator": {
          "$ref": "#/definitions/locatorDefinition"
        },
        "personnelType": {
          "description": "Personnel type suggests the kind of travellers being booked as part of this booking",
          "type": "string",
          "enum": [
            "IS_RETURNEE",
            "IS_MEDIC",
            "IS_ESCORT",
            "IS_MIXED"
          ]
        },
        "itinerary": {
          "$ref": "#/definitions/itineraryDefinition"
        }
      },
      "required": [
        "locator",
        "personnelType",
        "itinerary"
      ]
    },
    "locatorDefinition": {
      "type": "object",
      "properties": {
        "code": {
          "description": "A unique Id for this person for their involvement in this return. If addedBy is RMP, this value will have been provided by RMP in the booking request. If it's TSP, the travel provider will have generated this value. A v4 UUID is used as the unique Id.",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "lastName": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "code",
        "lastName"
      ],
      "additionalProperties": false
    },
    "itineraryDefinition": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/airportDefinition",
          "description": "The starting leg of the journey"
        },
        "to": {
          "$ref": "#/definitions/airportDefinition",
          "description": "The last leg of the journey"
        },
        "totalCost": {
          "type": "number",
          "multipleOf": 0.01,
          "description": "Ticket price in pounds and pence e.g. 500.45"
        },
        "segments": {
          "$ref": "#/definitions/segmentDefinition"
        }
      }
    },
    "segmentDefinition": {
      "type": "object",
      "description": "Details of a flight segment i.e. a plane taking off to landing. A ticket may cover one segment - or multiple segments where the journey is non-direct.",
      "properties": {
        "departureAirport": {
          "$ref": "#/definitions/airport",
          "description": "The departure airport."
        },
        "departureDateTime": {
          "description": "The date time when the flight departs. Local time is assumed. Do not include timezone information in the value. Format is YYYY-MM-DDThh:mm:ss.",
          "type": "string",
          "pattern": "^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d$"
        },
        "arrivalAirport": {
          "$ref": "#/definitions/airport"
        },
        "arrivalDateTime": {
          "description": "The date time when the flight arrives. Local time is assumed. Do not include timezone information in the value. Format is YYYY-MM-DDThh:mm:ss.",
          "type": "string",
          "pattern": "^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d$"
        },
        "airlineName": {
          "type": "string",
          "description": "The airline operating this flight e.g American Airlines"
        },
        "airlineCode": {
          "type": "string",
          "description": "The airline operating this flight e.g. AA"
        },
        "flightNumber": {
          "description": "The flight number.",
          "type": "string",
          "minLength": 1
        },
        "tickets": {
          "$ref": "#/definitions/ticketDefinition"
        }
      },
      "required": [
        "departureAirport",
        "departureDateTime",
        "arrivalAirport",
        "arrivalDateTime",
        "airlineName",
        "airlineCode",
        "flightNumber",
        "tickets"
      ],
      "additionalProperties": false
    },
    "airportDefinition": {
      "type": "object",
      "description": "Details identifying an airport",
      "properties": {
        "code": {
          "description": "The IATA code for the airport. e.g. LHR",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "name": {
          "description": "A human friendly name for the airport corresponding to the given IATA code e.g. London Heathrow",
          "type": "string",
          "minLength": 1
        },
        "country": {
          "type": "string",
          "minLength": 1
        },
        "city": {
          "type": "string",
          "minLength": 1
        },
        "terminal": {
          "description": "The Terminal of the flight if known",
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false
    },
    "ticketDefinition": {
      "type": "object",
      "description": "Details of a ticket.",
      "properties": {
        "firstName": {
          "type": "string",
          "minLength": 1
        },
        "lastName": {
          "type": "string",
          "minLength": 1
        },
        "ticketId": {
          "description": "A unique Id for this ticket assigned by the TSP. Used to reference this ticket in subsequent messages - including where this ticket is re-used to satisfy a subsequent booking request following the amendment to travel requirements. Avoids potential ambiguity where two different airlines issue tickets that happen to have the same number. A v4 UUID.",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "eTicketNumber": {
          "description": "Airline assigned reference also referred as travel document's identifier e.g. 016-1246781231",
          "type": "string",
          "minLength": 1
        },
        "bookingReference": {
          "description": "Airline assigned reference also know as a PNR E.g. 84SRTL",
          "type": "string",
          "minLength": 1
        },
        "fareBasisCode": {
          "description": "Airline assigned e.g. 'W' represents full-fare Premium economy and 'Y' represents full-fare Economy class",
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "firstName",
        "lastName",
        "ticketId",
        "eTicketNumber",
        "fareBasisCode"
      ],
      "additionalProperties": false
    }
  }
}