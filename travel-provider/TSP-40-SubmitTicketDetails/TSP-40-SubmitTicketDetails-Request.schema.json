{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "title": "TSP-40-SubmitTicketDetails Request Schema",
  "version": "0.0.1",
  "description": "Schema for TSP to supply RMP with details about the ticket(s) it has booked following a booking request from RMP. The TSP may send this message multiple times for a single booking request but a specific traveller must only be included in one message i.e. The TSP should wait until they have the full set of fulfilment details for a traveller before including them in a message.",
  "properties": {
    "requestId": {
      "type": "integer",
      "description": "Unique Id of the booking being responded to. Taken from the original booking request."
    },
    "travellers": {
      "type": "array",
      "description": "A list of travellers for whom this message contains fulfilment details. This does not need to be all travellers on the original booking as the TSP can submit details over a number of messages (see isComplete flag). It may also include travellers not listed in the original request - see handlingGuidelines.awaitEscortNames in TSP-20 request schema for more information.",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/travellerFulfilment"
      }
    },
    "isComplete": {
      "type": "boolean",
      "description": "A flag indicating whether this is the final message with booking details for this request. Once this flag has been sent, RMP will accept no further requests on this interface for this requestId."
    }
  },
  "required": [
    "requestId",
    "travellers",
    "isComplete"
  ],
  "additionalProperties": false,
  "definitions": {
    "travellerFulfilment": {
      "type": "object",
      "description": "Basic contact details.",
      "properties": {
        "travellerId": {
          "description": "A unique Id for this person for their involvement in this return. If addedBy is RMP, this value will have been provided by RMP in the booking request. If it's TSP, the travel provider will have generated this value. A v4 UUID is used as the unique Id.",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "forename": {
          "description": "Traveller's forenames.",
          "type": "string",
          "minLength": 1
        },
        "surname": {
          "description": "Traveller's surname(s).",
          "type": "string",
          "minLength": 1
        },
        "dateOfBirth": {
          "description": "Traveller's date of birth.",
          "type": "string",
          "format": "date"
        },
        "gender": {
          "description": "Traveller's gender.",
          "enum": [
            "M",
            "F"
          ]
        },
        "nationality": {
          "description": "Traveller's country of nationality - represented as an ISO-3166 country code.",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "travellerType": {
          "description": "Traveller's type.",
          "enum": [
            "PERSON_RETURNING",
            "MEDICAL_ESCORT",
            "SECURITY_ESCORT"
          ]
        },
        "addedBy": {
          "description": "Indicates which system added this person to the booking. Exists to support transitional phase where the TSP will be receiving data about escorts directly from the ESP and adding them to this message to communicate details of these escorts back to RMP.",
          "enum": [
            "RMP",
            "TSP"
          ]
        },
        "tickets": {
          "type": "array",
          "description": "A list of tickets obtained for this traveller.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/ticket"
          }
        }
      },
      "required": [
        "travellerId",
        "forename",
        "surname",
        "travellerType",
        "addedBy",
        "tickets"
      ],
      "additionalProperties": false
    },
    "ticket": {
      "type": "object",
      "description": "Details of a ticket.",
      "properties": {
        "ticketId": {
          "description": "A unique Id for this ticket assigned by the TSP. Used to reference this ticket in subsequent messages. Avoids potential ambiguity where two different airlines issue tickets that happen to have the same number. A v4 UUID.",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "ticketNumber": {
          "description": "Airline assigned reference for this ticket.",
          "type": "string",
          "minLength": 1
        },
        "issuingAirline": {
          "description": "ICAO code of the airline that issued this ticket. Due to code shares, there may be segments on this ticket that will be flown with a different airline hence inclusion of ICAO code for each segment.",
          "$ref": "#/definitions/airline"
        },
        "ticketPricePence": {
          "description": "Price paid for this ticket in pence.",
          "type": "integer"
        },
        "segments": {
          "type": "array",
          "description": "A list of flight segments covered by this ticket.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/segment"
          }
        }
      },
      "required": [
        "ticketId",
        "issuingAirline",
        "ticketPricePence",
        "segments"
      ],
      "additionalProperties": false
    },
    "segment": {
      "type": "object",
      "description": "Details of a flight segment i.e. a plane taking off to landing. A ticket may cover one segment - or multiple segments where the journey is non-direct.",
      "properties": {
        "departureAirport": {
          "$ref": "#/definitions/airport",
          "description": "The departure airport."
        },
        "arrivalAirport": {
          "$ref": "#/definitions/airport",
          "description": "The departure airport."
        },
        "departureDateTime": {
          "description": "The date time when the flight departs. Local time is assumed. Do not include timezone information in the value. Format is YYYY-MM-DDThh:mm:ss.",
          "type": "string",
          "pattern": "^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d$"
        },
        "arrivalDateTime": {
          "description": "The date time when the flight arrives. Local time is assumed. Do not include timezone information in the value. Format is YYYY-MM-DDThh:mm:ss.",
          "type": "string",
          "pattern": "^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d$"
        },
        "airline": {
          "$ref": "#/definitions/airline",
          "description": "The airline operating this flight."
        },
        "flightNumber": {
          "description": "The flight number.",
          "type": "string",
          "minLength": 1
        },
        "seatNumber": {
          "description": "The seat number.",
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "departureAirport",
        "arrivalAirport",
        "departureDateTime",
        "arrivalDateTime",
        "airline",
        "flightNumber"
      ],
      "additionalProperties": false
    },
    "airport": {
      "type": "object",
      "description": "Details identifying an airport",
      "properties": {
        "description": {
          "description": "A human friendly name for the airport corresponding to the given IATA code.",
          "type": "string",
          "minLength": 1
        },
        "IATACode": {
          "description": "The IATA code for the airport.",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        }
      },
      "required": [
        "description",
        "IATACode"
      ],
      "additionalProperties": false
    },
    "airline": {
      "type": "object",
      "description": "Details identifying an airline",
      "properties": {
        "description": {
          "description": "A human friendly name for the airline corresponding to the give ICAO code.",
          "type": "string",
          "minLength": 1
        },
        "ICAOCode": {
          "description": "The ICAO code for the airline.",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        }
      },
      "required": [
        "description",
        "ICAOCode"
      ],
      "additionalProperties": false
    }
  }
}