{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "title": "TSP-40-SubmitTicketDetails Request Schema",
  "description": "Schema for TSP to supply BRM with details about the ticket(s) it has booked following a booking request from BRM. The TSP may send this message multiple times for a single booking request but a specific traveller must only be included in one message i.e. The TSP should wait until they have the full set of fulfilment details for a traveller before including them in a message.",
  "type": "object",
  "properties": {
    "requestId": {
      "type": "string",
      "description": "This is the unique return id created by HO when the request is first submitted by HO to TSP"
    },
    "reference": {
      "description": "Home Office Reference. This is NOT unique Id, as for a Family/Group Booking this will be shared by multiple travelers",
      "type": "string",
      "minLength": 1
    },
    "bookingDetails": {
      "description": "The TSP can submit details over a number of messages. It may also include travellers not listed in the original request - see handlingGuidelines.awaitEscortNames in TSP-20 request schema for more information.",
      "$ref": "#/definitions/bookingDetailsDefinition"
    },
    "createdBy": {
      "$ref": "#/definitions/createdByDefinition",
      "description": "Details of the logger from TSP who is fulfilling the request"
    },
    "createdDateTime": {
      "description": "The time the request is created by CWT. Format is YYYY-MM-DDThh:mm:ss.",
      "type": "string",
      "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]):(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])$"
    }
  },
  "additionalProperties": false,
  "required": [
    "reference",
    "requestId",
    "bookingDetails",
    "createdBy"
  ],
  "definitions": {
    "createdByDefinition": {
      "type": "object",
      "description": "Basic contact details of the TSP Logger actioning this request",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the TSP logger who fulfilled the request and created the booking"
        },
        "email": {
          "type": "string",
          "description": "Email address of the logger.",
          "format": "email"
        },
        "telephone": {
          "type": "string",
          "description": "Phone number of the logger."
        },
        "groupName": {
          "type": "string",
          "description": "TSP Group name to contact if named contact not available.",
          "minLength": 1
        },
        "groupCode": {
          "type": "string",
          "description": "Code of the TSP contact group."
        },
        "groupEmail": {
          "type": "string",
          "description": "Email address of the TSP contact group.",
          "format": "email"
        },
        "groupTelephone": {
          "type": "string",
          "description": "Phone number of the TSP contact group.",
          "minLength": 1
        }
      },
      "additionalProperties": false,
      "required": [
        "groupName",
        "groupEmail",
        "groupTelephone"
      ]
    },
    "bookingDetailsDefinition": {
      "type": "object",
      "properties": {
        "bookingId": {
          "type": "string",
          "description": "Alphanumeric value upto 60 characters. Booking ID OR Itinerary Number issued by the GDS (Global distribution systems - travel networking systems used by travel agencies)."
        },
        "bookingState": {
          "type": "string",
          "enum": [
            "BOOKED",
            "TICKETED",
            "PASSED_QC"
          ]
        },
        "flightDetails": {
          "$ref": "#/definitions/flightDetailsDefinition"
        },
        "itineraryRemarks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "generalRemarks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "bookingId",
        "bookingState",
        "flightDetails"
      ],
      "additionalProperties": false
    },
    "flightDetailsDefinition": {
      "description": "This will have record per traveller",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "personnelType": {
            "description": "Personnel type suggests the kind of travelers being booked as part of this booking",
            "type": "string",
            "enum": [
              "DEPU",
              "DEPA",
              "MEDA",
              "MEDIC",
              "ESCORT"
            ],
            "default": "DEPU"
          },
          "locator": {
            "$ref": "#/definitions/locatorDefinition"
          },
          "itinerary": {
            "$ref": "#/definitions/itineraryDefinition"
          }
        },
        "required": [
          "personnelType",
          "locator"
        ],
        "additionalProperties": false
      }
    },
    "locatorDefinition": {
      "type": "object",
      "properties": {
        "locatorCode": {
          "description": "The Computer reservation system (CRS) creates a Record Locator also know as a PNR (Passenger Name Record) OR Booking Reference",
          "type": "string"
        },
        "lastName": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "locatorCode",
        "lastName"
      ],
      "additionalProperties": false
    },
    "itineraryDefinition": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/airportDefinition",
          "description": "The starting leg of the journey"
        },
        "to": {
          "$ref": "#/definitions/airportDefinition",
          "description": "The last leg of the journey"
        },
        "segments": {
          "$ref": "#/definitions/segmentDefinition"
        },
        "totalCost": {
          "type": "number",
          "multipleOf": 0.01,
          "description": "The total cost for the ticket, including applicable taxes etc."
        },
        "costCurrency": {
          "description": "ISO 4217 currency codes e.g. GBP, USD, INR etc"
        }
      },
      "required": [
        "from",
        "to",
        "segments"
      ],
      "additionalProperties": false
    },
    "segmentDefinition": {
      "type": "array",
      "description": "Details of a flight segment i.e. a plane taking off to landing. A ticket may cover one segment - or multiple segments where the journey is non-direct.",
      "minItems": 1,
      "items": {
        "type": "object",
        "properties": {
          "segmentNumber": {
            "exclusiveMinimum": true,
            "minimum": 0,
            "type": "integer",
            "multipleOf": 1
          },
          "airlineCode": {
            "type": "string",
            "description": "The airline operating this flight e.g. AA"
          },
          "airlineName": {
            "type": "string",
            "description": "The airline operating this flight e.g American Airlines (https://en.wikipedia.org/wiki/List_of_airline_codes)"
          },
          "flightNumber": {
            "type": "string",
            "minLength": 1
          },
          "departureAirport": {
            "$ref": "#/definitions/airportDefinition",
            "description": "The departure airport."
          },
          "departureDateTime": {
            "description": "The date time when the flight departs. Local time is assumed. Do not include timezone information in the value. Format is YYYY-MM-DDThh:mm:ss.",
            "type": "string",
            "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]):(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])$"
          },
          "arrivalAirport": {
            "$ref": "#/definitions/airportDefinition"
          },
          "arrivalDateTime": {
            "description": "The date time when the flight arrives. Local time is assumed. Do not include timezone information in the value. Format is YYYY-MM-DDThh:mm:ss.",
            "type": "string",
            "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]):(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])$"
          },
          "tickets": {
            "$ref": "#/definitions/ticketDefinition"
          },
          "confirmationNumber": {
            "type": "string",
            "description": "The numbers issued by the airlines to uniquely identify the reservation."
          },
          "url": {
            "type": "string",
            "description": "Web page to do the web check-in or manage the booking"
          }
        },
        "required": [
          "segmentNumber",
          "airlineCode",
          "airlineName",
          "flightNumber",
          "departureAirport",
          "departureDateTime",
          "arrivalAirport",
          "arrivalDateTime",
          "tickets"
        ]
      }
    },
    "airportDefinition": {
      "type": "object",
      "description": "Details identifying an airport",
      "properties": {
        "airportCode": {
          "description": "The IATA code for the airport. e.g. LHR",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "airportName": {
          "description": "A human friendly name for the airport corresponding to the given IATA code e.g. London Heathrow",
          "type": "string",
          "minLength": 1
        },
        "terminal": {
          "description": "The Terminal of the flight if known",
          "type": "string",
          "minLength": 1
        },
        "city": {
          "type": "string",
          "minLength": 1
        },
        "country": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "airportCode",
        "airportName"
      ],
      "additionalProperties": false
    },
    "ticketDefinition": {
      "type": "array",
      "description": "Details of a ticket.",
      "items": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "eTicketNumber": {
            "description": "This is issued by the Airlines and also referred as travel document's identifier e.g. 016-1246781231",
            "type": "string",
            "minLength": 1
          },
          "fareType": {
            "description": "Passenger Type Codes (PTC) definition e.g. ADULT, ACCOMPANIED PASSENGER, AGENT, etc.",
            "type": "string",
            "minLength": 1
          },
          "fareBasisCode": {
            "description": "Airline assigned Letters and numbers to identify the class of travel and traveller type e.g. full-fare Economy class (Y), Child fare (CH), Return Fare (RT) etc.",
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "firstName",
          "lastName",
          "eTicketNumber",
          "fareType"
        ],
        "additionalProperties": false
      }
    }
  }
}
