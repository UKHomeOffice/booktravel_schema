{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "title": "OSE-40-QuoteBookingConfirmationRequest",
  "version": "0.0.1",
  "description": "Add or update ESP with the flight data passed over to BRM from TSP using TSP-40 for the Escorts accompanying the returnee",
  "properties": {
    "quoteRef": {
      "type": "string",
      "description": "BRM return Id generated for this travel request and it becomes the OSE booking request id"
    },
    "requestAuthoriser": {
      "$ref": "#/definitions/requester",
      "description": "Details of the TSP user who have created the booking for escorts"
    },
    "bookingDetails": {
      "$ref": "#/definitions/bookingDetailsDefinition",
      "description": "Details of booking done for the escorts and booked dates."
    }
  },
  "required": [ "quoteRef", "requestAuthoriser", "bookingDetails"],
  "definitions": {
    "requester": {
      "type": "object",
      "description": "Basic contact details of the requester and/or the team",
      "properties": {
        "requesterId": {
          "type": "string",
          "description": "Case Worker Id if present",
          "minLength": 1
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "telephone": {
          "type": "string",
          "minLength": 1
        },
        "groupName": {
          "type": "string",
          "description": "Group name to contact if named contact not available.",
          "minLength": 1
        },
        "groupCode": {
          "type": "string",
          "description": "Code of the contact group.",
          "minLength": 1
        },
        "groupEmail": {
          "type": "string",
          "format": "email"
        },
        "groupTelephone": {
          "type": "string",
          "minLength": 1
        }
      },
      "additionalProperties": false,
      "required": [ "name" ]
    },
    "bookingDetailsDefinition": {
      "type": "object",
      "properties": {
        "bookingId": {
          "type": "string",
          "description": "Booking ID OR Itinerary Number issued by the GDS (Global distribution systems - travel networking systems used by travel agencies)"
        },
        "flightDetails": {
          "$ref": "#/definitions/flightDetailsDefinition"
        },
        "itineraryRemarks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "generalRemarks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "bookingId",
        "flightDetails"
      ],
      "additionalProperties": false
    },
    "flightDetailsDefinition": {
      "description": "This will have record per traveller",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "personnelType": {
            "description": "Personnel type suggests the kind of traveller being booked as part of this booking. In future CWT can provide distinction between Medics and escorts",
            "type": "string",
            "enum": [
              "IsSecurityOrMedic",
              "IsReturnee"
            ]
          },
          "locator": {
            "$ref": "#/definitions/locatorDefinition"
          },
          "itinerary": {
            "$ref": "#/definitions/itineraryDefinition"
          }
        },
        "required": [
          "locator"
        ],
        "additionalProperties": false
      }
    },

    "locatorDefinition": {
      "type": "object",
      "properties": {
        "code": {
          "description": "The Computer reservation system (CRS) creates a Record Locator also know as a PNR (Passenger Name Record) OR Booking Reference",
          "type": "string"
        },
        "surname": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "code",
        "surname"
      ],
      "additionalProperties": false
    },
    "itineraryDefinition": {
      "type": "object",
      "properties": {
        "locator": {
          "$ref": "#/definitions/locatorDefinition"
        },
        "from": {
          "$ref": "#/definitions/airportDefinition",
          "description": "The starting leg of the journey"
        },
        "to": {
          "$ref": "#/definitions/airportDefinition",
          "description": "The last leg of the journey"
        },
        "segments": {
          "$ref": "#/definitions/segmentDefinition"
        },
        "totalCost": {
          "type": "string"
        },
        "costCurrency": {
          "description": "ISO 4217 currency codes e.g. GBP, USD, INR etc"
        }
      },
      "required": [
        "from",
        "to",
        "segments"
      ],
      "additionalProperties": false
    },
    "segmentDefinition": {
      "type": "array",
      "description": "Details of a flight segment i.e. a plane taking off to landing. A ticket may cover one segment - or multiple segments where the journey is non-direct.",
      "minItems": 1,
      "items": {
        "type": "object",
        "properties": {
          "segmentNumber": {
            "minimum": 0,
            "type": "integer",
            "multipleOf": 1
          },
          "airlineCode": {
            "type": "string",
            "description": "The airline operating this flight e.g. AA"
          },
          "airlineName": {
            "type": "string",
            "description": "The airline operating this flight e.g American Airlines (https://en.wikipedia.org/wiki/List_of_airline_codes)"
          },
          "flightNumber": {
            "type": "string",
            "minLength": 1
          },
          "departAirport": {
            "$ref": "#/definitions/airportDefinition",
            "description": "The departure airport."
          },
          "departDateTime": {
            "description": "The date time when the flight departs. Local time is assumed. Do not include timezone information in the value. Format is YYYY-MM-DDThh:mm:ss.",
            "type": "string",
            "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]):(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])$"
          },
          "arriveAirport": {
            "$ref": "#/definitions/airportDefinition"
          },
          "arriveDateTime": {
            "description": "The date time when the flight arrives. Local time is assumed. Do not include timezone information in the value. Format is YYYY-MM-DDThh:mm:ss.",
            "type": "string",
            "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]):(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])$"
          },
          "tickets": {
            "$ref": "#/definitions/ticketDefinition"
          },
          "confirmationNumber": {
            "type": "string",
            "description": "The numbers issued by the airlines to uniquely identify the reservation."
          },
          "url": {
            "type": "string",
            "description": "Web page to do the web check-in or manage the booking"
          }
        },
        "required": [
          "airlineCode",
          "airlineName",
          "flightNumber",
          "departAirport",
          "departDateTime",
          "arriveAirport",
          "arriveDateTime",
          "tickets"
        ]
      }
    },
    "airportDefinition": {
      "type": "object",
      "description": "Details identifying an airport",
      "properties": {
        "code": {
          "description": "The IATA code for the airport. e.g. LHR",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "name": {
          "description": "A human friendly name for the airport corresponding to the given IATA code e.g. London Heathrow",
          "type": "string",
          "minLength": 1
        },
        "terminal": {
          "description": "The Terminal of the flight if known",
          "type": "string",
          "minLength": 1
        },
        "city": {
          "type": "string",
          "minLength": 1
        },
        "country": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false
    },
    "ticketDefinition": {
      "type": "array",
      "description": "Details of a ticket.",
      "items": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "eTicketNumber": {
            "description": "This is issued by the Airlines and also referred as travel document's identifier e.g. 016-1246781231",
            "type": "string",
            "minLength": 1
          },
          "fareType": {
            "description": "Passenger Type Codes (PTC) definition e.g. ADULT, ACCOMPANIED PASSENGER, AGENT, etc.",
            "type": "string",
            "minLength": 1
          },
          "fareBasisCode": {
            "description": "Airline assigned Letters and numbers to identify the class of travel and traveller type e.g. full-fare Economy class (Y), Child fare (CH), Return Fare (RT) etc.",
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "firstName",
          "lastName",
          "fareType"
        ],
        "additionalProperties": false
      }
    }
  }
}